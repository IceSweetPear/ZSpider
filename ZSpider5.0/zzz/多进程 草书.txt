
现在咱们的 列表 是 字符串 保存的 




现在咱们的 爬虫 是 5.0版本的 

集成了redis 多进程 等牛逼操作

但是呢现在有几个问题   需要在 5.1版本更新

	1， 存储redis的方式   现在是 序列化 整体的操作 这样只是临时处理  一定要更新的  更新方向为
		每个任务的 任务名+ url 为 键  这样 才符合 redis 
	2， 优化多进程  现在的多进程 只是一个 临时 的 简易多进程 我们对多进程 的 了解还不够深
		再深入了解了解
	3， 爬虫结构优化   更改了 结构后  结构 有点松散
 

因为现在 用的 while

	第一个 值 从 redis 移除的 时候 还没有加入新的队列 所以现在队列 是空的

	第二个 进程 没通过 while 所以直接退出了

	解决1  加一个等待器 仅仅当队列有数据的时候开始 进行  很长时间没数据就直接退出(除了第一级 一般不会没数据)

	解决2  

进程锁

1	咱们加入队列的数据 是进程加入的

	可以跟 这条数据 加一个 由谁创建的 字段  获取 和 删除 操作 只能 这个角色进行

2	获取到 数据的  时候 先把 一个 随机数 或者 进程id 啥的  赋值上去  
	
	然后赋值真实数据的时候  再进行 一次 验证 如果 他的key 等于 刚才赋值的 随机数 就 赋值 

多进程

	捕获子进程发送的信号   
		/配合pcntl_signal使用
		declare (ticks = 1);

		//当子进程退出时，会触发该函数,当前子进程数-1
		pcntl_signal(SIGCHLD, function ($signo) {
		    switch ($signo) {
		        case SIGCHLD:
		            echo $curChildPro . 'SIGCHLD', PHP_EOL;
		            $curChildPro--;
		            break;
    		    }
		});






	多进程  是不是跟咱们想的是一样  
	
	就是一个 同步执行的 for ?

	测试 多进程
	
	测试递归多进程


	1， 一些简单的 小测试

		创建每个子进程的时候 会 将上文 变量 一块复制过去

		复制的是值 不是引用 所以 子进程内 改变不了 外边的变量

	2， 测试下 子进程相关的		

	3，进行foreach 测试

	4，进行 脚本爬取测试
		
		目前看到的 处理文件方式 都是 分割成小文件  再将每个下文件 交给 子进程 处理
		直接多进程读取一个文件的方式没有看到

	
	5，进行 递归测试

		我们子进程无法控制外部变量

		递归是循环调用一个函数 一直等待这个函数 执行完毕 再执行下一层递归

		多进程呢 相当于 同时 执行了一些东西

		那我们 递归 和 多进程 如何 组合在一起呢

		
		我们现在的递归爬虫

		每次结束后 生成 一个 UrlList 

		foreach UrlList 对每个 UrlList 进行递归调用

		这个时候的 foreach 还没有出来 还在 等待  等这 递归函数 结束之后 才 进行下次 foreach

		多进程可以 在这个时候 插入进来

		例如 生成了 9个 Url 组成的 UrlList

		现在要循环9次 UrlList

		现在开了 三个进程  把这9个分成 三分  每个进程 处理 三个 urlList

		这时 就开始分叉了  拿着同样的 图纸 和 数据 但是在的容器不一样 但是还可以接着跑 

		再接下来的递归中都在 各自的进程中开始跑 




	！！现在虽然能跑 但还是在dotask 的控制下跑的  

	如果不循环调用 dotask = 队列中就没有数据  也就执行不下去了

	
	主进程启动一下后 由 子进程 管理 队列 向 队列中 移除 补充 数据  

	现在的队列 有两种方式

	数组中 -> 需要使用进程通信

	redis中 -> 需要打通redis 且redis需要加进程锁


	我们现在 的操作是 每个数据列表 保存了 任务name 

	把每个获取到到的 子级任务 保存在 队列中

	根据任务name 去拿 任务体

	但是 任务体  中有 闭包  闭包 存不进去 队列

	现在想的是 找个 办法 保存闭包

	找个对象 保存 闭包 再 序列化对象？ 有点难度。可能需要反射等机制

	我们现在 的 任务体放在队列中 是为了 多进程 做准备

	因为现在 的 子级任务体 是 实时获取的   所以 为了让子进程 可以获取和添加 用了redis 

	能不能 在主进程 就 把 任务体 的函数解析好？ 一个foreach 搞定

	一开始就保存好了 任务体

	在 doTask 函数中 就不跟 任务体 传递 或 添加 队列了 

	直接 通过 urlList 中的 任务名 去 解析好的 任务体 数组 中 获取到 自己想要的 任务体
	

