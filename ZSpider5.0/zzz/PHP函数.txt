
die();
exit();

include()  把文件包含过来 警告
require()  把文件包含过来 致命错误
require_once($file);

mail('接收者'，'主题'，'信息'); 发送邮件

date_default_timezone_set("PRC");  设置时区

echo $time_start = time();
echo $datal_start = date("Y/m/d h:i:s:a");

error_reporting(0); 关闭错误信息

getcwd() 获取根文件夹


declare(ticks=1);
register_tick_function('check_timeout');


__call ( string name, array arguments )  在类的内部调用一个不可访问的方法时 触发call
__callStatic ( string name, array arguments )
在类的外部静态调用一个不可访问的方法时 触发callStatic
在类的外部对象调用一个不可访问的方法时 触发call

__autoload('类名')  当实例一个不存在的类的时候 调用此函数
spl_autoload_register(array(哪个类的名,函数的名))   当实例一个不存在的类的时候 调用这个类的这个方法


func_get_args();   在函数内定义 得到函数的所有参数 返回值是参数个数 获取 func_get_args(1)

call_user_func_array(array($this,$f),$args);

method_exists($this,$f='f'.$i)  检查一个实例对象$model有没有$event方法，如果有就调用他 



ord() 返回字符串首个字母的ASCLL编码
chr() 传入ASSCLL编码返回字符
trim() 		清除两侧空格
rtrim()		清除右空格
ltrim()		清除左空格
substr();      分割字符串
stripslashes() 删除所有反斜杠
strrev() 反转字符串
str_split()  字符串分割到数组中
str_shuffle() 打乱字符串
strtolower() 转小写
strtoupper() 转大写
ucfirst()   首字母大写
ucwords()
htmlentities()	    将特殊字符文本转为HTML实体
htmlspecialchars()  将特殊字符文本转为HTML实体 
strcasecmp() 
strcmp(str1，str2) 比较两个字符串
explode(separator,string,[limit]); 把字符串按指定字符分割到数组
implode(separator,array)
fprintf()
str_replace(find,replace,string,[count])
md5()       以MD5方式编码
md5_file()
sha1()	    以sha1方式编码
sha1_file()
stripos() 查找字符串在另一字符串首次出现的位置
strrpos() 查找字符串在另一字符串最后出现的位置
stristr()
strlen()   返回字符串长度

randge(0,10) 生成一个0-10的数组
array_combine() 合并数组 一个数组是键名 一个数组是键值 
array_filter($a1,"test_odd")
array_merge() 合并两个数组
array_pop()   从尾出栈
array_push()  从尾入栈
array_reverse() 倒叙数组
array_shift()
array_slice() 从数组的第某个元素开始取出，并返回数组中取出的元素：
array_splice() array_splice() 函数从数组中移除选定的元素，并用新元素取代它。函数也将返回剩下的的数组
in_array()
shuffle()  打乱数组
sort()  
count()    返回数组长度
array_combine() 通过合并两个数组来创建一个新数组，其中的一个数组元素为键名，另一个数组元素为键值：


filter_var() 过滤一个变量
FILTER_VALIDATE_EMAIL   把值作为 e-mail 地址来验证。
FILTER_SANITIZE_EMAIL   删除所有字符，除了字母、数字以及 !#$%&'*+-/=?^_`{|}~@.[]


文件
	file_get_content('./text') 读取文件中所有内容
	$f = fopen("webdictionary.txt", "r") 打开文件 跟多模式选择 没有则创建
	feof($f) 函数检查是否已到达 "end-of-file" (EOF)。	while(!feof($f))
	fread($f,400) 的第一个参数包含待读取文件的文件名，第二个参数规定待读取的最大字节数。
	fgets($f) 函数用于从文件读取单行。

	file_put_contents($filename, $data) 向文件写入内容
	fwrite($f, 'world');

	unlink($filename);删除文件
	rmdir($dir);删除文件夹
	
	file_exists(文件);  判断是否存在	
	is_file($filename) 判断是不是一个文件
	is_writeable($filename)可写
	is_readable($filename)可读

	filectime($f) 创建时间
	filemtime()   修改时间
	fileatime()   访问时间

	filesize($filename); 字节


readfile() 读取文件
filesize("webdictionary.txt")  返回文件的字节长度
fclose() 函数用于关闭打开的文件

fgetc() 函数用于从文件中读取单个字符。
fwrite() 函数用于写入文件

move_uploaded_file(现在在哪，移动到那)  移动文件



setcookie("user", "Alex Porter", time()+3600);
$_COOKIE["user"];
isset($_COOKIE["user"]) 判断是否存在

session_start() 启动会话
$_SESSION['views']=1; 设置
echo $_SESSION['views'] 获取
unset($_SESSION['views']);删除会话
session_destroy() 彻底终结会话

$_POST('name');
$_GET('name');
$_REQUEST('name'); 

$_FILES["file"]["name"] - 被上传文件的名称
$_FILES["file"]["type"] - 被上传文件的类型
$_FILES["file"]["size"] - 被上传文件的大小，以字节计
$_FILES["file"]["tmp_name"] - 存储在服务器的文件的临时副本的名称
$_FILES["file"]["error"] - 由文件上传导致的错误代码


$_SERVER['HTTP_ACCEPT_LANGUAGE']//浏览器语言 
$_SERVER['REMOTE_ADDR'] //当前用户 IP 。 
$_SERVER['REMOTE_HOST'] //当前用户主机名 
$_SERVER['REQUEST_URI'] //URL
$_SERVER['REMOTE_PORT'] //端口。 
$_SERVER['SERVER_NAME'] //服务器主机的名称。 
$_SERVER['PHP_SELF']//正在执行脚本的文件名 


preg_match
preg_quote
preg_split 以指定正则切割字符串保存在数组中
preg_split
preg_grep  匹配一个数组 保存到一个数组
preg_replace("/正则/",替换成啥,"字符")


set names UTF-8 设置编码

create database zzz     //创建数据库

				
mysql_select_db("my_db", $con);  选择数据库
				
				
show databases;  查看当前数据库服务器中的所有数据库
				
				
drop database mydb3; 删除前面创建的mydb3数据库

				
select database();   查看当前使用的数据库
			
				
use mydb2; 切换数据库
				
				
show tables;  查看数据库中的所有表：


"create table Persons(    //创建一个表
FirstName varchar(15),
LastName varchar(15),
Age int
)"
				
								
drop table 表名； 删除表 
				
				
select age from Persons   //从表中选择一列数据 *为所有数据
				
				
insert into table_name (column1, column2,...)  //在表中插入值
values (value1, value2,....)

				
insert into table_name				//在表中插入值
values (value1, value2,....)

				
select age from zzz where age = 21   //条件
				
				
select * form zzz order by age  //根据年龄进行排序
select * form zzz order by age desc  //根据年龄进行倒序
				
				
updata zzz set age = 22 where name = 'zzz' // 修改zzz表中的age当name=zzz
				
				
delete from zzz where name = 'zzz'
				
$row = mysqli_fetch_array($result,MYSQLI_NUM);  // 找的的值返回一个数组
	
	
mysql_close($con);
	



);









